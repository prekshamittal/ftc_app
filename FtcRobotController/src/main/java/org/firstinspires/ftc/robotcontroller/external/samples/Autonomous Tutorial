package org.firstinspires.ftc.robotcontroller.external.samples;

import ...

/**
 * This file contains an minimal example of a Linear "OpMode". An OpMode is a 'program' that runs in either
 * the autonomous or the teleop period of an FTC match. The names of OpModes appear on the menu
 * of the FTC Driver Station. When an selection is made from the menu, the corresponding OpMode
 * class is instantiated on the Robot Controller and executed.
 *
 * This particular OpMode just executes a basic Tank Drive Teleop for a two wheeled robot
 * It includes all the skeletal structure that all linear OpModes contain.
 *
 * Use Android Studios to Copy this Class, and Paste it into your team's code folder with a new name.
 * Remove or comment out the @Disabled line to add this opmode to the Driver Station OpMode list
 */

@Autonomous(name="Autonomous Tutorial", group="Linear Opmode")
@Disabled
public class TutorialAutonomous extends SynchronousOpMode
{
    //Declare motors
    DcMotor motorLeftFront = null;
    DcMotor motorLeftBack = null;
    DcMotor motorRightFront = null;
    DcMotor motorRightBack = null;


    @override public void main() throws InterruptedException
        {
            //Initialize motors
            motorLeftFront = hardwareMap.dcMotor.get("motorLeftFront");
            motorLeftBack = hardwareMap.dcMotor.get("motorLeftBack");
            motorRightFront = hardwareMap.dcMotor.get("motorRightFront");
            motorRightBack = hardwareMap.dcMotor.get("motorRightBack");

            motorLeftFront.setChannelMode(DcMotorController.RunMode.RUN_WITHOUT_ENCODERS);
            motorLeftBack.setChannelMode(DcMotorController.RunMode.RUN_WITHOUT_ENCODERS);
            motorRightFront.setChannelMode(DcMotorController.RunMode.RUN_WITHOUT_ENCODERS);
            motorRightBack.setChannelMode(DcMotorController.RunMode.RUN_WITHOUT_ENCODERS);

            motorLeftFront.setDirection(DcMotor.Direction.REVERSE);
            motorLeftBack.setDirection(DcMotor.Direction.REVERSE);

            waitForStart();

            //MAIN CODE

            moveForward(1);
            Thread.sleep(3000)
            moveForward(0);
        }
    public void moveForward(double power)
    {
        motorLeftFront.setPower(power);
        motorLeftBack.setPower(power);
        motorRightFront.setPower(power);
        motorRightBack.setPower(power);
    }

    public void moveBackward(double power)
}
